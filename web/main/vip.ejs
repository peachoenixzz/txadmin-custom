<%- await include('parts/header.ejs', locals) %>
  <style>
    .card-accent-info {
      border-top: 2px solid #00bf8f !important;
    }
  </style>

  <div class="text-center mb-4">
    <h2>VIP</h2>
  </div>

  <div class="row justify-content-center">
    <div class="col-md-7 mw-col6">
      <div class="card card-accent-info">
        <div class="card-header float-left">
          <span class="h5">Discord ID :</span>
          <input class="form-control mt-3" type="text" name="discordID" id="discord-id" "
                    placeholder=" Enter Discord ID . . .">
          <div class="mt-3">
            <button class="btn btn-primary" type="submit" id="check-button">
              Check
            </button>
          </div>
        </div>

      </div>
    </div>
  </div>
  <div class="row justify-content-center">
    <div id="vipPay" style="display:none">
      <div class="col-md-7 mw-col6">
        <div class="card card-accent-info">
          <div class="card-header float-left">
            <span class="h5">Player Name</span>
            <button id="close-button" type="button" class="close" aria-label="Close">
              <span>×</span>
            </button>
          </div>
          <div class="card-header float-left">
            <div class="h5">VIP Point</div>
            <div class="row">
              <div class="col">
                <button type="button" class="btn btn-outline-primary  btn-block" id="vip-0" data-value="0"
                  priority="Citizen">0</button>
              </div>
              <div class="col">
                <button type="button" class="btn btn-outline-primary  btn-block" id="vip-500" data-value="500"
                  priority="Basic">500</button>
              </div>
              <div class="col">
                <button type="button" class="btn btn-outline-primary  btn-block" id="vip-1000" data-value="1000"
                  priority="Standard">1,000</button>
              </div>
              <div class="col">
                <button type="button" class="btn btn-outline-primary  btn-block" id="vip-1500" data-value="1500"
                  priority="Premium">1,500</button>
              </div>
              <div class="col">
                <button type="button" class="btn btn-outline-primary  btn-block" id="vip-2000" data-value="2000"
                  priority="Ultimate">2,000</button>
              </div>
            </div>
            <div class="h5 mt-3">Extra Point</div>
            <div class="row">
              <div class="col">
                <button type="button" class="btn btn-outline-primary  btn-block" id="extra-0" data-value="0">0</button>
              </div>
              <div class="col">
                <button type="button" class="btn btn-outline-primary  btn-block" id="extra-500"
                  data-value="500">500</button>
              </div>
              <div class="col">
                <button type="button" class="btn btn-outline-primary  btn-block" id="extra-1000"
                  data-value="1000">1,000</button>
              </div>
              <div class="col">
                <button type="button" class="btn btn-outline-primary  btn-block" id="extra-1500"
                  data-value="1500">1,500</button>
              </div>
              <div class="col">
                <button type="button" class="btn btn-outline-primary  btn-block" id="extra-2000"
                  data-value="2000">2,000</button>
              </div>
            </div>
            <div class="h5 mt-3">Permanant Point</div>
            <div class="row">
              <div class="col">
                <button type="button" class="btn btn-outline-primary  btn-block" id="per-0" data-value="0">0</button>
              </div>
              <div class="col">
                <button type="button" class="btn btn-outline-primary  btn-block" id="per-500"
                  data-value="500">500</button>
              </div>
              <div class="col">
                <button type="button" class="btn btn-outline-primary  btn-block" id="per-1000"
                  data-value="1000">1,000</button>
              </div>
              <div class="col">
                <button type="button" class="btn btn-outline-primary  btn-block" id="per-1500"
                  data-value="1500">1,500</button>
              </div>
              <div class="col">
                <button type="button" class="btn btn-outline-primary  btn-block" id="per-2000"
                  data-value="2000">2,000</button>
              </div>
            </div>
            <div class="h6 mt-3" id="expire-date">Expire date : 01/01/2001</div>
            <div class="h6 mt-3" id="vipPoint">Vip Point : </div>
            <div class="h6 mt-3" id="extraPoint">Extra Point : </div>
            <div class="h6 mt-3" id="permanent-point">Permanant Point : </div>
            <div class="h6 mt-3" id="total-point">Total Point : </div>
          <div id="plus-container">
            <div class="d-flex align-items-center">
              <select class="form-control" id="dataSelect">
                <option selected>Select</option>
              </select>
              <input class="form-control text-center" type="text" name="#" id="dayInput" placeholder="Day">
              <button class="btn btn-primary fs-6" type="button" onclick="plusItems()">+</button>
            </div>
          </div>
          </div>
          <div class="card-header d-flex justify-content-end">
            <button class="btn btn-primary" type="button" onclick="applyData()">APPLY</button>
          </div>
        </div>
      </div>
    </div>
  </div>
  </div>

  <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
  <script>
    let data = {
      vip_point: 0,
      extra_point: 0,
      permanent_point: 0,
      priority: '',
      item_name: "",
      day: 0
    };



    const vipButtons = document.querySelectorAll('[id^="vip-"]');
    vipButtons.forEach(function (button) {
      button.addEventListener('click', function () {
        const dataValue = button.getAttribute('data-value');
        const priority = button.getAttribute('priority');
        if (dataValue !== null && dataValue !== '' && priority !== null && priority !== '') {
          vipButtons.forEach(function (otherButton) {
            if (otherButton !== button) {
              otherButton.classList.add('btn-outline-primary');
              otherButton.classList.remove('btn-primary');
            }
          });
          button.classList.remove('btn', 'btn-outline-primary');
          button.classList.add('btn', 'btn-primary');
          data.vip_point = parseInt(dataValue);
          data.priority = priority;
          console.log('ค่า data:', data);
        } else {
          console.log('ไม่มีข้อมูลใน data-value');
        }
      });
    });


    const extraButtons = document.querySelectorAll('[id^="extra-"]');
    extraButtons.forEach(function (button) {
      button.addEventListener('click', function () {
        const dataValue = button.getAttribute('data-value');
        if (dataValue !== null && dataValue !== '') {
          extraButtons.forEach(function (otherButton) {
            if (otherButton !== button) {
              otherButton.classList.add('btn-outline-primary');
              otherButton.classList.remove('btn-primary');
            }
          });
          button.classList.remove('btn-outline-primary');
          button.classList.add('btn-primary');
          data.extra_point = parseInt(dataValue);
          console.log('ค่า data:', data);
        } else {
          console.log('ไม่มีข้อมูลใน data-value');
        }
      });
    });

    const permanentButtons = document.querySelectorAll('[id^="per-"]');
    permanentButtons.forEach(function (button) {
      button.addEventListener('click', function () {
        const dataValue = button.getAttribute('data-value');
        if (dataValue !== null && dataValue !== '') {
          permanentButtons.forEach(function (otherButton) {
            if (otherButton !== button) {
              otherButton.classList.add('btn-outline-primary');
              otherButton.classList.remove('btn-primary');
            }
          });
          button.classList.remove('btn-outline-primary');
          button.classList.add('btn-primary');
          data.permanent_point = parseInt(dataValue);
          console.log('ค่า data:', data);
        } else {
          console.log('ไม่มีข้อมูลใน data-value');
        }
      });
    });

    function checkAlreadyVIP(point) {
      const vipID = document.getElementById(`vip-${point}`);
      const otherButtons = document.querySelectorAll('[id^="vip-"]');

      if (vipID) {
        otherButtons.forEach(function (button) {
          if (button !== vipID) {
            button.classList.add('btn-outline-primary');
            button.classList.remove('btn-primary');
          }
        });
        vipID.classList.remove('btn-outline-primary');
        vipID.classList.add('btn-primary');
        return;
      }
      return;
    }


    function checkAlreadyVIP(point) {
      const vipID = document.getElementById(`vip-${point}`);
      const otherButtons = document.querySelectorAll('[id^="vip-"]');

      if (vipID) {
        otherButtons.forEach(function (button) {
          if (button !== vipID) {
            button.classList.add('btn-outline-primary');
            button.classList.remove('btn-primary');
          }
        });
        vipID.classList.remove('btn-outline-primary');
        vipID.classList.add('btn-primary');
        return;
      }
      return;
    }

    function checkAlreadyExtra(point) {
      const extraID = document.getElementById(`extra-${point}`);
      const otherButtons = document.querySelectorAll('[id^="extra-"]');

      if (extraID) {
        otherButtons.forEach(function (button) {
          if (button !== extraID) {
            button.classList.add('btn-outline-primary');
            button.classList.remove('btn-primary');
          }
        });
        extraID.classList.remove('btn-outline-primary');
        extraID.classList.add('btn-primary');
        return;
      }
      return;
    }

    function checkAlreadyPermanent(point) {
      const perID = document.getElementById(`per-${point}`);
      const otherButtons = document.querySelectorAll('[id^="per-"]');

      if (perID) {
        otherButtons.forEach(function (button) {
          if (button !== perID) {
            button.classList.add('btn-outline-primary');
            button.classList.remove('btn-primary');
          }
        });
        perID.classList.remove('btn-outline-primary');
        perID.classList.add('btn-primary');
        return;
      }
      return;
    }




    document.getElementById('close-button').addEventListener('click', function () {
      document.getElementById("vipPay").style.display = 'none';
    });

    document.getElementById('close-button').addEventListener('click', function () {
      document.getElementById("vipPay").style.display = 'none';
    });

    document.getElementById('check-button').addEventListener('click', function () {
      let discordIdInput = document.getElementById('discord-id').value;
      console.log(discordIdInput);

      const proxyUrl = 'https://cors-anywhere.herokuapp.com/';
      const apiUrl = 'https://circleproject.dev/api/identifier/discord/id/' + discordIdInput;

      axios.get(proxyUrl + apiUrl, {
        headers: {
          'Authorization': 'Basic dGhlY2lyY2xlZGV2OlRoZWNpcmNsZTExMiFAIw==',
          'Content-Type': 'application/json',
          'Access-Control-Allow-Origin': 'https://tx.circleproject.dev',
          'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE',
          'Access-Control-Allow-Headers': 'Authorization',
          'Access-Control-Max-Age': 1800
        },
        // params: {
        //   discordID: discordIdInput
        // }
      })
        .then(async function (response) {
          console.log(response)
          let data = response.data;
          if (response.status === 200) {
            document.getElementById("vipPay").style.display = 'block';
            await selectItem()
            checkAlreadyVIP(response.data.vip_point)
            checkAlreadyExtra(response.data.extra_point)
            checkAlreadyPermanent(response.data.permanent_point)

            const expire_date = document.getElementById("expire-date")
            expire_date.textContent = "Expire Date : " + response.data.expire_date;

            const vipPoint = document.getElementById("vipPoint")
            vipPoint.textContent = "Vip Point : " + response.data.vip_point;

            const extraPoint = document.getElementById("extraPoint")
            extraPoint.textContent = "Extra Point : " + response.data.extra_point;

            const permanentPoint = document.getElementById("permanent-point")
            permanentPoint.textContent = "Permanent Point : " + response.data.permanent_point;

            console.log(data);
            return
          }

        })
        .catch(function (error) {
          console.log(error);
        });
    });

    function selectItem() {
      const proxyUrl = 'https://cors-anywhere.herokuapp.com/';
      const apiItem = 'https://circleproject.dev/api/items/vip';

      axios.get(proxyUrl + apiItem, {
        headers: {
          'Authorization': 'Basic dGhlY2lyY2xlZGV2OlRoZWNpcmNsZTExMiFAIw==',
          'X-Requested-With': 'XMLHttpRequest',
          'Content-Type': 'application/json'
        },
      })
        .then(function (response) {
          const data = response.data;
          const select = document.getElementById("dataSelect");

          // สร้างตัวเลือก (option) จากข้อมูลที่ได้รับจาก API
          data.forEach(function (item) {
            const option = document.createElement("option");
            option.value = item.item_name;
            option.textContent = item.item_label;
            select.appendChild(option);
          });
        })
        .catch(function (error) {
          console.log(error);
        });
    }

    function plusItems() {
    const plusContainer = document.getElementById("plus-container");
    const newselectItem = `
        <div class="d-flex align-items-center">
            <select class="form-control" id="dataSelect">
                <option selected>Select</option>
            </select>
            <input class="form-control text-center" type="text" name="dayInput" placeholder="Day">
            <button class="btn btn-primary fs-6" type="button" onclick="plusItems()">+</button>
        </div>
    `;
    plusContainer.insertAdjacentHTML('beforeend', newselectItem);
}



    document.getElementById("dataSelect").addEventListener("change", handleSelectChange);
    function handleSelectChange() {
      const select = document.getElementById("dataSelect");
      const selectedItem = select.value;
      data.item_name = selectedItem;
      console.log(data);
    }

    document.getElementById("dayInput").addEventListener("change", handleDayInputChange);
    function handleDayInputChange() {
      const dayInput = document.getElementById("dayInput");
      const dayValue = dayInput.value;
      data.day = parseInt(dayValue);
      console.log(data);
    }
    // const data = {
    //     "vip_point": 1000,
    //     "extra_point": 100,
    //     "permanent_point": 50,
    //     "priority": "Ultimate"
    // };

    async function applyData() {

      let discordIdInput = document.getElementById('discord-id').value;
      console.log(discordIdInput);
      const proxyUrl = 'https://cors-anywhere.herokuapp.com/';
      const apiUrl = 'https://circleproject.dev/api/identifier/discord/id/' + discordIdInput;
      console.log(data)
      console.log(apiUrl)
      await axios.put(proxyUrl + apiUrl, {
        data
      }, {
        headers: {
          'Authorization': 'Basic dGhlY2lyY2xlZGV2OlRoZWNpcmNsZTExMiFAIw==',
          'X-Requested-With': 'XMLHttpRequest',
          'Content-Type': 'application/json'
        },
      })
        .then(response => {
          console.log('API response:', response.data);
        })
        .catch(error => {
          console.error('API error:', error);
        });
    }

  </script>
  <%- await include('parts/footer.ejs', locals) %>